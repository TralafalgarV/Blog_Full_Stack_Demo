// ******************** 公共部分 ******************
@MaxWidth: 100%;
@MaxHeight: 100%;
@BtnSize: 2rem;

// 定位
.pos(a) {
    position: absolute;
}
.pos(f) {
    position: fixed;
}
.pos(r) {
    position: relative;
}

// ******************** 专辑轮播 ******************
.mContainer {
    .pos(r);
    width: @MaxWidth;
    height: 12rem;
    /*改变3D元素透视位置*/
    perspective: 1500px;
    /*水平居中*/
    margin: 0 auto;
    text-align: center;

    // 旋转中心
    .mGallery {
        .pos(a);
        width: @MaxWidth;
        height: @MaxHeight;
        /*flat: 表示所有子元素在2D平面展现； preserve-3d：表示所有子元素在3D空间中呈现*/
        transform-style: preserve-3d;
        transition: 0.4s;
        transition-timing-function: ease-out;

        // 每个专辑封面的效果
        .gallery-pic {
            .pos(a);
            width: 10rem;
            height: 6rem;
            top: 50%;
            left: 50%;
            /* transform: translate(-50%, -50%); */
            
            img {
                width: @MaxWidth;
                height: @MaxHeight;
            }
        
            // 利用 less 递归循环
            .Circle(1);
        }

        @media screen and (max-width: 414px) {
            .gallery-pic {
                width: 8rem;
                height: 4.8rem;
            }
        }
    }
}
// less 递归循环：实现专辑封面环绕旋转效果
.Circle(@num) when (@num <= 6) { 
    @count:~"@{num}";
    // 设置每个pic的初始位置，一定要一起写，不然前面的会被覆盖
    &:nth-child(@{count}) {
        /* transformZ:相当于 相对于视点给元素增加了一个 旋转半径r，此时再旋转（rotate）元素时，元素会以原点为中心点，r为半径进行 环绕旋转 */    
        transform:translate(-50%, -50%) rotateY(@num * 60deg ) translateZ(350px)
    }
    .Circle(@num + 1)  //回调自身
}

// ******************** 轮播按钮样式 ******************
#buttons {
    .pos(a);
    bottom: -@BtnSize / 4;
    left: 50%;
    transform: translateX(-50%);

    .music-btn {
        
        display: inline-block;
        width: @BtnSize;
        height: @BtnSize;
        border-radius: (@BtnSize / 2);        
        line-height: @BtnSize;
        margin: 0 (@BtnSize / 8);
        border: 1px solid #888;
        cursor: pointer;
        text-align: center;

        &:hover {
            /*水平、垂直、[模糊距离]、[阴影的尺寸]、[颜色]、[将外部阴影 (outset) 改为内部阴影]*/ 
            box-shadow: 1px 1px 1px #888;
        }
    }
}

@media screen and (max-width: 414px) {
    #buttons {
        width: @MaxWidth;
        bottom: @BtnSize / 4;
        .music-btn {
            width: 0.8 * @BtnSize;
            height: 0.8 * @BtnSize;
            line-height: 0.8 * @BtnSize;        
        }
    }
}

/************************* 歌曲列表 ************************/
.music-list {
    .pos(a);
    display: block;
    width: 100%;
    height: 100%;
    /* background-color: yellow; */
    z-index: 3000;
    margin-top: 25px;

    ul {
        padding: 0 0.75rem;
        list-style-type: none;

        & > * {
            
        }
    }
}

.musis-list-item {
    margin: 0.4rem 0;
    padding: 0 0.2rem;
    border-bottom: 1px solid gray;
    border-radius: 3px;

    &:hover {
        /*水平、垂直、[模糊距离]、[阴影的尺寸]、[颜色]、[将外部阴影 (outset) 改为内部阴影]*/ 
        box-shadow: 1px 1px 1px #888; 
        cursor: pointer;
        background-color: rgba(136, 136, 136, 0.2);  
    }

    /*阻止事件捕获*/ 
    & > *{
        pointer-events:none;
    }

    header  {
        padding-top: 0.2rem;
        font-size: 1rem;
    }

    section {
        & > * {
            display: inline-block;
            margin-right: 0.5rem;
            padding: 0.2rem 0;
        }
    }
}

@media screen and (max-width: 414px) {
    .music-list {
        margin: 0;
    }
}